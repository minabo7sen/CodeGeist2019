@model CodeGeist2019.ViewModels.UserViewModel

@{
    ViewBag.Title = "New";
}

<h2>Second Step</h2>


@using (Html.BeginForm("Save","SiteAccount")) 
{
    @Html.AntiForgeryToken()
    
<div class="col-md-6">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.NewUser.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.NewUser.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.Name, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NewUser.Age, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.NewUser.Age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.Age, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">  @*Gender task make it drop down*@
        @Html.LabelFor(model => model.NewUser.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.NewUser.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewUser.Gender, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.NewUser.BioGraphy, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="form-group">
                @Html.TextAreaFor(model => model.NewUser.BioGraphy, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Designer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Designer, new { htmlAttributes = new { @class = "mt-checkbox" } })
                @Html.ValidationMessageFor(model => model.Designer, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Translator, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Translator, new { htmlAttributes = new { @class = "mt-checkbox" } })
                @Html.ValidationMessageFor(model => model.Translator, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Finish Registeration" class="btn btn-success" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
