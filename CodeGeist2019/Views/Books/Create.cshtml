@model CodeGeist2019.Models.Book

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Save", "Books", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="col-md-6">
    <h4>Book</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="row col-md-10">
            <div class="col-md-10">
                <div class="input-group">

                    <div class="input-group-prepend">
                        <span class="input-group-text">
                            $
                        </span>

                    </div>

                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control m-input" } })
                </div>
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
            <div class="m-checkbox-inline col-md-2 mt-2">
                <label class="m-checkbox m-checkbox--air m-checkbox--solid m-checkbox--state-success">
                    <input type="checkbox" id="free" onclick="myFunction()">
                    Free
                    <span></span>
                </label>

            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AgeLimit, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AgeLimit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AgeLimit, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-lable col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", @style = "height:150px;" })
        </div>

    </div>
    <div class="form-group">
        <label class="control-label col-md-2">&nbsp;</label>
        <div class="input-group col-md-10">
            <div class="custom-file">
                <input class="custom-file-input col-md-6" id="FilePath" type="file" name="file" />
                <label class="custom-file-label" for="FilePath">Choose File</label>
            </div>
        </div>

    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-dark" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script src="https://code.jquery.com/jquery-3.1.1.slim.min.js" integrity="sha384-A7FZj7v+d/sdmMqp/nOQwliLvUsJfDHW+k9Omg/a/EheAdgtzNs3hpfag6Ed950n" crossorigin="anonymous"></script>

<script>

    $('#FilePath').on('change', function (e) {
        //get the file name
        var fileName = e.target.files[0].name;
        //replace the "Choose a file" label
        $(this).next('.custom-file-label').html(fileName);
    })


    function myFunction() {
        // Get the checkbox
        var checkBox = document.getElementById("free");
        

        // If the checkbox is checked, display the output text
        if (checkBox.checked == true) {
            document.getElementById("Price").disabled = true;
            document.getElementById("Price").value = 0;
        } else {
            document.getElementById("Price").disabled = false;
        }
    }
</script>